using System.Collections.Generic;
using System.Linq;

namespace POD_Billing.Base
{
    public static class PodParameterName
    {
        public static Dictionary<string, string> ParametersName = new Dictionary<string, string>
        {
            {"Token", "token"},
            {"ApiToken", "_token_"},
            {"TokenIssuer", "_token_issuer_"},
            {"ClientId", "client_id"},
            {"ClientSecret", "client_secret"},
            {"Ott", "_ott_"},
            {"UserId" , "userId"},
            {"ProductId" , "productId[]"},
            {"Price" , "price[]"},
            {"ProductDescription" , "productDescription[]"},
            {"Quantity" , "quantity[]"},
            {"GuildCode" , "guildCode"},
            {"PreferredTaxRate" , "preferredTaxRate"},
            {"AddressId" , "addressId"},
            {"RedirectUrl" , "redirectURL"},
            {"BillNumber" , "billNumber"},
            {"Description" , "description"},
            {"Deadline" , "deadline"},
            {"CurrencyCode" , "currencyCode"},
            {"VoucherHash" , "voucherHash"},
            {"VerificationNeeded" , "verificationNeeded"},
            {"VerifyAfterTimeout" , "verifyAfterTimeout"},
            {"Preview" , "preview"},
            {"Metadata" , "metadata"},
            {"Safe" , "safe"},
            {"PostVoucherEnabled" , "postVoucherEnabled"},
            {"HasEvent" , "hasEvent"},
            {"EventTitle" , "eventTitle"},
            {"EventTimeZone" , "eventTimeZone"},
            {"EventReminders" , "eventReminders"},
            {"EventDescription" , "eventDescription"},
            {"EventMetadata" , "eventMetadata"},
            {"Size" , "size"},
            {"Offset" , "offset"},
            {"Id" , "id"},
            {"InvoiceItemId" , "invoiceItemId[]"},
            {"ItemDescription" , "itemDescription[]"},
            {"InvoiceId" , "invoiceId"},
            {"Wallet" , "wallet"},
            {"UniqueNumber" , "uniqueNumber"},
            {"TrackerId" , "trackerId"},
            {"FromDate" , "fromDate"},
            {"ToDate" , "toDate"},
            {"IsCanceled" , "isCanceled"},
            {"IsPayed" , "isPayed"},
            {"IsClosed" , "isClosed"},
            {"IsWaiting" , "isWaiting"},
            {"ReferenceNumber" , "referenceNumber"},
            {"IssuerId" , "issuerId"},
            {"Query" , "query"},
            {"FirstId" , "firstId"},
            {"LastId" , "lastId"},
            {"ProductIdList" , "productIdList"},
            {"MetaQuery" , "metaQuery"},
            {"LastNRows" , "lastNRows"},
            {"CallbackUrl" , "callbackUrl"},
            {"CallbackUri" , "callbackUri"},
            {"RedirectUri" , "redirectUri"},
            {"DelegationId" , "delegationId"},
            {"ForceDelegation" , "forceDelegation"},
            {"StatusCode" , "statusCode"},
            {"Sheba" , "sheba"},
            {"NationalCode" , "nationalCode"},
            {"LastName" , "lastName"},
            {"FirstName" , "firstName"},
            {"Email" , "email"},
            {"CellphoneNumber" , "cellphoneNumber"},
            {"UserName" , "userName"},
            {"Date" , "date"},
            {"CreditorInvoiceId" , "creditorInvoiceId"},
            {"DebtorInvoiceId" , "debtorInvoiceId"},
            {"Instant" , "instant"},
            {"DealerBizId" , "dealerBizId"},
            {"AllProductAllow" , "allProductAllow"},
            {"Enable" , "enable"},
            {"CallUrl" , "callUrl"},
            {"CallUri" , "callUri"},
            {"DealingBusinessId" , "dealingBusinessId"},
            {"ServiceUrl" , "serviceUrl"},
            {"DelegatorId" , "delegatorId"},
            {"DelegationHash" , "delegationHash"},
            {"Data" , "data"},
            {"FromAmount" , "fromAmount"},
            {"ToAmount" , "toAmount"},
            {"Gateway" , "gateway"},
            {"ToolCode" , "toolCode"},
            {"ToolId" , "toolId"},
            {"Amount" , "amount"},
            {"BusinessId" , "businessId"},
            {"VoucherHashs" , "voucherHashs"},
            {"CustomerDescription" , "customerDescription"},
            {"CustomerMetadata" , "customerMetadata"},
            {"EntityId" , "productId"}
        };
        public static string GetPodName(this string key)
        {
            return ParametersName.FirstOrDefault(_ => _.Key.Equals(key)).Value;
        }
    }
}

